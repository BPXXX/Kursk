// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg.proto

#ifndef PROTOBUF_Msg_2eproto__INCLUDED
#define PROTOBUF_Msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
void protobuf_AssignDesc_Msg_2eproto();
void protobuf_ShutdownFile_Msg_2eproto();

class Msg_Register_C2S;
class Msg_Register_S2C;
class Msg_Login_C2S;
class Msg_Login_S2C;
class Msg_CreateRoom_C2S;
class Msg_CreateRoom_S2C;
class Msg_EnterRoom_C2S;
class Msg_EnterRoom_S2C;
class Msg_ChangeState_C2S;
class Msg_ChangeState_S2C;
class Msg_Expel_C2S;
class Msg_Expel_S2C;
class Msg_StartGame_C2S;
class Msg_StartGame_S2C;
class Msg_ExitRoom_C2S;
class Msg_ExitRoom_S2C;
class Msg_GetRoomMen_C2S;
class Msg_GetRoomMen_S2C;
class Msg_FANGJIANLT_C2S;
class Msg_FANGJIANLT_S2C;
class Msg_VEC_C2S;
class Msg_VEC_S2C;
class Msg_PICKSIDE_C2S;
class Msg_PICKSIDE_S2C;
class Msg_AMMO_C2S;
class Msg_AMMO_S2C;
class Msg_DAMAGE_C2S;
class Msg_DAMAGE_S2C;
class Msg_GETITEM_S2C;
class Msg_DEATH_S2C;
class Msg_POINTTAKING_S2C;
class Msg_POINTTAKEN_S2C;
class Msg_ADDSCORES_S2C;
class Msg_ENDGAME_S2C;
class Msg_POINTDESPUTE_S2C;
class Msg_ROOMINFO_S2C;
class Msg_ROOMLIST_S2C;
class Msg_ROOMINFOREQUEST_C2S;
class Msg_USERINFO_S2C;
class MSG_USERINFOLISTOS_S2C;
class MSG_VECOS_S2C;
class MSG_VECOSLIST_S2C;
class MSG_INFOAC_C2S;

enum MsgType {
  REGISTER_C2S = 1010,
  REGISTER_S2C = 2010,
  LOGIN_C2S = 1020,
  LOGIN_S2C = 2020,
  CREATE_ROOM_C2S = 1030,
  CREATE_ROOM_S2C = 2030,
  ENTER_ROOM_C2S = 1040,
  ENTER_ROOM_S2C = 2040,
  CHANGE_STATE_C2S = 1050,
  CHANGE_STATE_S2C = 2050,
  EXPEL_C2S = 1060,
  EXPEL_S2C = 2060,
  START_GAME_C2S = 1070,
  START_GAME_S2C = 2070,
  EXIT_ROOM_C2S = 1080,
  EXIT_ROOM_S2C = 2080,
  GET_ROOMMEN_C2S = 1090,
  GET_ROOMMEN_S2C = 2090,
  FANGJIANLT_C2S = 1110,
  FANGJIANLT_S2C = 2110,
  VEC_C2S = 1120,
  VEC_S2C = 2120,
  PickSide_C2S = 1130,
  PickSide_S2C = 2130,
  Ammo_C2S = 1140,
  Ammo_S2C = 2131,
  Damage_C2S = 2132,
  Damage_S2C = 2140,
  GetItem_S2C = 2150,
  Death_S2C = 2160,
  PointTaking = 2170,
  PointTaken = 2180,
  AddSocres = 2190,
  EndGame = 2191,
  PointDispute = 2192,
  RoomInfo = 2193,
  RoomList = 2194,
  RoomInfoRequest = 1170,
  UserInfo = 2195,
  UserInfoOS = 2196,
  VECOS = 2197,
  VecOsList = 2198,
  InfoAc = 2199
};
LIBPROTOC_EXPORT bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = REGISTER_C2S;
const MsgType MsgType_MAX = InfoAc;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT Msg_Register_C2S : public ::google::protobuf::Message {
 public:
  Msg_Register_C2S();
  virtual ~Msg_Register_C2S();

  Msg_Register_C2S(const Msg_Register_C2S& from);

  inline Msg_Register_C2S& operator=(const Msg_Register_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Register_C2S& default_instance();

  void Swap(Msg_Register_C2S* other);

  // implements Message ----------------------------------------------

  Msg_Register_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Register_C2S& from);
  void MergeFrom(const Msg_Register_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes szName = 1;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 1;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const void* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  inline void set_allocated_szname(::std::string* szname);

  // required bytes szPassword = 2;
  inline bool has_szpassword() const;
  inline void clear_szpassword();
  static const int kSzPasswordFieldNumber = 2;
  inline const ::std::string& szpassword() const;
  inline void set_szpassword(const ::std::string& value);
  inline void set_szpassword(const char* value);
  inline void set_szpassword(const void* value, size_t size);
  inline ::std::string* mutable_szpassword();
  inline ::std::string* release_szpassword();
  inline void set_allocated_szpassword(::std::string* szpassword);

  // @@protoc_insertion_point(class_scope:Msg_Register_C2S)
 private:
  inline void set_has_szname();
  inline void clear_has_szname();
  inline void set_has_szpassword();
  inline void clear_has_szpassword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* szname_;
  ::std::string* szpassword_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Register_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_Register_S2C : public ::google::protobuf::Message {
 public:
  Msg_Register_S2C();
  virtual ~Msg_Register_S2C();

  Msg_Register_S2C(const Msg_Register_S2C& from);

  inline Msg_Register_S2C& operator=(const Msg_Register_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Register_S2C& default_instance();

  void Swap(Msg_Register_S2C* other);

  // implements Message ----------------------------------------------

  Msg_Register_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Register_S2C& from);
  void MergeFrom(const Msg_Register_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_Register_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Register_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_Login_C2S : public ::google::protobuf::Message {
 public:
  Msg_Login_C2S();
  virtual ~Msg_Login_C2S();

  Msg_Login_C2S(const Msg_Login_C2S& from);

  inline Msg_Login_C2S& operator=(const Msg_Login_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Login_C2S& default_instance();

  void Swap(Msg_Login_C2S* other);

  // implements Message ----------------------------------------------

  Msg_Login_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Login_C2S& from);
  void MergeFrom(const Msg_Login_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes szName = 1;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 1;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const void* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  inline void set_allocated_szname(::std::string* szname);

  // required bytes szPassword = 2;
  inline bool has_szpassword() const;
  inline void clear_szpassword();
  static const int kSzPasswordFieldNumber = 2;
  inline const ::std::string& szpassword() const;
  inline void set_szpassword(const ::std::string& value);
  inline void set_szpassword(const char* value);
  inline void set_szpassword(const void* value, size_t size);
  inline ::std::string* mutable_szpassword();
  inline ::std::string* release_szpassword();
  inline void set_allocated_szpassword(::std::string* szpassword);

  // @@protoc_insertion_point(class_scope:Msg_Login_C2S)
 private:
  inline void set_has_szname();
  inline void clear_has_szname();
  inline void set_has_szpassword();
  inline void clear_has_szpassword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* szname_;
  ::std::string* szpassword_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Login_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_Login_S2C : public ::google::protobuf::Message {
 public:
  Msg_Login_S2C();
  virtual ~Msg_Login_S2C();

  Msg_Login_S2C(const Msg_Login_S2C& from);

  inline Msg_Login_S2C& operator=(const Msg_Login_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Login_S2C& default_instance();

  void Swap(Msg_Login_S2C* other);

  // implements Message ----------------------------------------------

  Msg_Login_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Login_S2C& from);
  void MergeFrom(const Msg_Login_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_Login_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Login_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_CreateRoom_C2S : public ::google::protobuf::Message {
 public:
  Msg_CreateRoom_C2S();
  virtual ~Msg_CreateRoom_C2S();

  Msg_CreateRoom_C2S(const Msg_CreateRoom_C2S& from);

  inline Msg_CreateRoom_C2S& operator=(const Msg_CreateRoom_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_CreateRoom_C2S& default_instance();

  void Swap(Msg_CreateRoom_C2S* other);

  // implements Message ----------------------------------------------

  Msg_CreateRoom_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_CreateRoom_C2S& from);
  void MergeFrom(const Msg_CreateRoom_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_CreateRoom_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_CreateRoom_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_CreateRoom_S2C : public ::google::protobuf::Message {
 public:
  Msg_CreateRoom_S2C();
  virtual ~Msg_CreateRoom_S2C();

  Msg_CreateRoom_S2C(const Msg_CreateRoom_S2C& from);

  inline Msg_CreateRoom_S2C& operator=(const Msg_CreateRoom_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_CreateRoom_S2C& default_instance();

  void Swap(Msg_CreateRoom_S2C* other);

  // implements Message ----------------------------------------------

  Msg_CreateRoom_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_CreateRoom_S2C& from);
  void MergeFrom(const Msg_CreateRoom_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_CreateRoom_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_CreateRoom_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_EnterRoom_C2S : public ::google::protobuf::Message {
 public:
  Msg_EnterRoom_C2S();
  virtual ~Msg_EnterRoom_C2S();

  Msg_EnterRoom_C2S(const Msg_EnterRoom_C2S& from);

  inline Msg_EnterRoom_C2S& operator=(const Msg_EnterRoom_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_EnterRoom_C2S& default_instance();

  void Swap(Msg_EnterRoom_C2S* other);

  // implements Message ----------------------------------------------

  Msg_EnterRoom_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_EnterRoom_C2S& from);
  void MergeFrom(const Msg_EnterRoom_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_EnterRoom_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_EnterRoom_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_EnterRoom_S2C : public ::google::protobuf::Message {
 public:
  Msg_EnterRoom_S2C();
  virtual ~Msg_EnterRoom_S2C();

  Msg_EnterRoom_S2C(const Msg_EnterRoom_S2C& from);

  inline Msg_EnterRoom_S2C& operator=(const Msg_EnterRoom_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_EnterRoom_S2C& default_instance();

  void Swap(Msg_EnterRoom_S2C* other);

  // implements Message ----------------------------------------------

  Msg_EnterRoom_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_EnterRoom_S2C& from);
  void MergeFrom(const Msg_EnterRoom_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // optional bytes szName = 3;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 3;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const void* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  inline void set_allocated_szname(::std::string* szname);

  // @@protoc_insertion_point(class_scope:Msg_EnterRoom_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_szname();
  inline void clear_has_szname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 number_;
  ::std::string* szname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_EnterRoom_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ChangeState_C2S : public ::google::protobuf::Message {
 public:
  Msg_ChangeState_C2S();
  virtual ~Msg_ChangeState_C2S();

  Msg_ChangeState_C2S(const Msg_ChangeState_C2S& from);

  inline Msg_ChangeState_C2S& operator=(const Msg_ChangeState_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ChangeState_C2S& default_instance();

  void Swap(Msg_ChangeState_C2S* other);

  // implements Message ----------------------------------------------

  Msg_ChangeState_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ChangeState_C2S& from);
  void MergeFrom(const Msg_ChangeState_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 number1 = 2;
  inline bool has_number1() const;
  inline void clear_number1();
  static const int kNumber1FieldNumber = 2;
  inline ::google::protobuf::int32 number1() const;
  inline void set_number1(::google::protobuf::int32 value);

  // optional int32 number2 = 3;
  inline bool has_number2() const;
  inline void clear_number2();
  static const int kNumber2FieldNumber = 3;
  inline ::google::protobuf::int32 number2() const;
  inline void set_number2(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline ::google::protobuf::int32 ready() const;
  inline void set_ready(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ChangeState_C2S)
 private:
  inline void set_has_number1();
  inline void clear_has_number1();
  inline void set_has_number2();
  inline void clear_has_number2();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number1_;
  ::google::protobuf::int32 number2_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 ready_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ChangeState_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ChangeState_S2C : public ::google::protobuf::Message {
 public:
  Msg_ChangeState_S2C();
  virtual ~Msg_ChangeState_S2C();

  Msg_ChangeState_S2C(const Msg_ChangeState_S2C& from);

  inline Msg_ChangeState_S2C& operator=(const Msg_ChangeState_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ChangeState_S2C& default_instance();

  void Swap(Msg_ChangeState_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ChangeState_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ChangeState_S2C& from);
  void MergeFrom(const Msg_ChangeState_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 number1 = 2;
  inline bool has_number1() const;
  inline void clear_number1();
  static const int kNumber1FieldNumber = 2;
  inline ::google::protobuf::int32 number1() const;
  inline void set_number1(::google::protobuf::int32 value);

  // optional int32 number2 = 3;
  inline bool has_number2() const;
  inline void clear_number2();
  static const int kNumber2FieldNumber = 3;
  inline ::google::protobuf::int32 number2() const;
  inline void set_number2(::google::protobuf::int32 value);

  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline ::google::protobuf::int32 ready() const;
  inline void set_ready(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ChangeState_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_number1();
  inline void clear_has_number1();
  inline void set_has_number2();
  inline void clear_has_number2();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 number1_;
  ::google::protobuf::int32 number2_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 ready_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ChangeState_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_Expel_C2S : public ::google::protobuf::Message {
 public:
  Msg_Expel_C2S();
  virtual ~Msg_Expel_C2S();

  Msg_Expel_C2S(const Msg_Expel_C2S& from);

  inline Msg_Expel_C2S& operator=(const Msg_Expel_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Expel_C2S& default_instance();

  void Swap(Msg_Expel_C2S* other);

  // implements Message ----------------------------------------------

  Msg_Expel_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Expel_C2S& from);
  void MergeFrom(const Msg_Expel_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_Expel_C2S)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Expel_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_Expel_S2C : public ::google::protobuf::Message {
 public:
  Msg_Expel_S2C();
  virtual ~Msg_Expel_S2C();

  Msg_Expel_S2C(const Msg_Expel_S2C& from);

  inline Msg_Expel_S2C& operator=(const Msg_Expel_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Expel_S2C& default_instance();

  void Swap(Msg_Expel_S2C* other);

  // implements Message ----------------------------------------------

  Msg_Expel_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_Expel_S2C& from);
  void MergeFrom(const Msg_Expel_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_Expel_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_Expel_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_StartGame_C2S : public ::google::protobuf::Message {
 public:
  Msg_StartGame_C2S();
  virtual ~Msg_StartGame_C2S();

  Msg_StartGame_C2S(const Msg_StartGame_C2S& from);

  inline Msg_StartGame_C2S& operator=(const Msg_StartGame_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_StartGame_C2S& default_instance();

  void Swap(Msg_StartGame_C2S* other);

  // implements Message ----------------------------------------------

  Msg_StartGame_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_StartGame_C2S& from);
  void MergeFrom(const Msg_StartGame_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_StartGame_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_StartGame_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_StartGame_S2C : public ::google::protobuf::Message {
 public:
  Msg_StartGame_S2C();
  virtual ~Msg_StartGame_S2C();

  Msg_StartGame_S2C(const Msg_StartGame_S2C& from);

  inline Msg_StartGame_S2C& operator=(const Msg_StartGame_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_StartGame_S2C& default_instance();

  void Swap(Msg_StartGame_S2C* other);

  // implements Message ----------------------------------------------

  Msg_StartGame_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_StartGame_S2C& from);
  void MergeFrom(const Msg_StartGame_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_StartGame_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_StartGame_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ExitRoom_C2S : public ::google::protobuf::Message {
 public:
  Msg_ExitRoom_C2S();
  virtual ~Msg_ExitRoom_C2S();

  Msg_ExitRoom_C2S(const Msg_ExitRoom_C2S& from);

  inline Msg_ExitRoom_C2S& operator=(const Msg_ExitRoom_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ExitRoom_C2S& default_instance();

  void Swap(Msg_ExitRoom_C2S* other);

  // implements Message ----------------------------------------------

  Msg_ExitRoom_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ExitRoom_C2S& from);
  void MergeFrom(const Msg_ExitRoom_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ExitRoom_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ExitRoom_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ExitRoom_S2C : public ::google::protobuf::Message {
 public:
  Msg_ExitRoom_S2C();
  virtual ~Msg_ExitRoom_S2C();

  Msg_ExitRoom_S2C(const Msg_ExitRoom_S2C& from);

  inline Msg_ExitRoom_S2C& operator=(const Msg_ExitRoom_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ExitRoom_S2C& default_instance();

  void Swap(Msg_ExitRoom_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ExitRoom_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ExitRoom_S2C& from);
  void MergeFrom(const Msg_ExitRoom_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ExitRoom_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ExitRoom_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_GetRoomMen_C2S : public ::google::protobuf::Message {
 public:
  Msg_GetRoomMen_C2S();
  virtual ~Msg_GetRoomMen_C2S();

  Msg_GetRoomMen_C2S(const Msg_GetRoomMen_C2S& from);

  inline Msg_GetRoomMen_C2S& operator=(const Msg_GetRoomMen_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_GetRoomMen_C2S& default_instance();

  void Swap(Msg_GetRoomMen_C2S* other);

  // implements Message ----------------------------------------------

  Msg_GetRoomMen_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_GetRoomMen_C2S& from);
  void MergeFrom(const Msg_GetRoomMen_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_GetRoomMen_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_GetRoomMen_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_GetRoomMen_S2C : public ::google::protobuf::Message {
 public:
  Msg_GetRoomMen_S2C();
  virtual ~Msg_GetRoomMen_S2C();

  Msg_GetRoomMen_S2C(const Msg_GetRoomMen_S2C& from);

  inline Msg_GetRoomMen_S2C& operator=(const Msg_GetRoomMen_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_GetRoomMen_S2C& default_instance();

  void Swap(Msg_GetRoomMen_S2C* other);

  // implements Message ----------------------------------------------

  Msg_GetRoomMen_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_GetRoomMen_S2C& from);
  void MergeFrom(const Msg_GetRoomMen_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated int32 number = 2;
  inline int number_size() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number(int index) const;
  inline void set_number(int index, ::google::protobuf::int32 value);
  inline void add_number(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      number() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_number();

  // repeated bytes szName = 3;
  inline int szname_size() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 3;
  inline const ::std::string& szname(int index) const;
  inline ::std::string* mutable_szname(int index);
  inline void set_szname(int index, const ::std::string& value);
  inline void set_szname(int index, const char* value);
  inline void set_szname(int index, const void* value, size_t size);
  inline ::std::string* add_szname();
  inline void add_szname(const ::std::string& value);
  inline void add_szname(const char* value);
  inline void add_szname(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& szname() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_szname();

  // repeated int32 tankType = 4;
  inline int tanktype_size() const;
  inline void clear_tanktype();
  static const int kTankTypeFieldNumber = 4;
  inline ::google::protobuf::int32 tanktype(int index) const;
  inline void set_tanktype(int index, ::google::protobuf::int32 value);
  inline void add_tanktype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tanktype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tanktype();

  // repeated int32 ready = 5;
  inline int ready_size() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline ::google::protobuf::int32 ready(int index) const;
  inline void set_ready(int index, ::google::protobuf::int32 value);
  inline void add_ready(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ready() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ready();

  // @@protoc_insertion_point(class_scope:Msg_GetRoomMen_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > number_;
  ::google::protobuf::RepeatedPtrField< ::std::string> szname_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tanktype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ready_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_GetRoomMen_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_FANGJIANLT_C2S : public ::google::protobuf::Message {
 public:
  Msg_FANGJIANLT_C2S();
  virtual ~Msg_FANGJIANLT_C2S();

  Msg_FANGJIANLT_C2S(const Msg_FANGJIANLT_C2S& from);

  inline Msg_FANGJIANLT_C2S& operator=(const Msg_FANGJIANLT_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_FANGJIANLT_C2S& default_instance();

  void Swap(Msg_FANGJIANLT_C2S* other);

  // implements Message ----------------------------------------------

  Msg_FANGJIANLT_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_FANGJIANLT_C2S& from);
  void MergeFrom(const Msg_FANGJIANLT_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes szContent = 1;
  inline bool has_szcontent() const;
  inline void clear_szcontent();
  static const int kSzContentFieldNumber = 1;
  inline const ::std::string& szcontent() const;
  inline void set_szcontent(const ::std::string& value);
  inline void set_szcontent(const char* value);
  inline void set_szcontent(const void* value, size_t size);
  inline ::std::string* mutable_szcontent();
  inline ::std::string* release_szcontent();
  inline void set_allocated_szcontent(::std::string* szcontent);

  // required bytes szName = 2;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 2;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const void* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  inline void set_allocated_szname(::std::string* szname);

  // required int32 houseid = 3;
  inline bool has_houseid() const;
  inline void clear_houseid();
  static const int kHouseidFieldNumber = 3;
  inline ::google::protobuf::int32 houseid() const;
  inline void set_houseid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_FANGJIANLT_C2S)
 private:
  inline void set_has_szcontent();
  inline void clear_has_szcontent();
  inline void set_has_szname();
  inline void clear_has_szname();
  inline void set_has_houseid();
  inline void clear_has_houseid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* szcontent_;
  ::std::string* szname_;
  ::google::protobuf::int32 houseid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_FANGJIANLT_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_FANGJIANLT_S2C : public ::google::protobuf::Message {
 public:
  Msg_FANGJIANLT_S2C();
  virtual ~Msg_FANGJIANLT_S2C();

  Msg_FANGJIANLT_S2C(const Msg_FANGJIANLT_S2C& from);

  inline Msg_FANGJIANLT_S2C& operator=(const Msg_FANGJIANLT_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_FANGJIANLT_S2C& default_instance();

  void Swap(Msg_FANGJIANLT_S2C* other);

  // implements Message ----------------------------------------------

  Msg_FANGJIANLT_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_FANGJIANLT_S2C& from);
  void MergeFrom(const Msg_FANGJIANLT_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional bytes szContent = 2;
  inline bool has_szcontent() const;
  inline void clear_szcontent();
  static const int kSzContentFieldNumber = 2;
  inline const ::std::string& szcontent() const;
  inline void set_szcontent(const ::std::string& value);
  inline void set_szcontent(const char* value);
  inline void set_szcontent(const void* value, size_t size);
  inline ::std::string* mutable_szcontent();
  inline ::std::string* release_szcontent();
  inline void set_allocated_szcontent(::std::string* szcontent);

  // optional bytes szName = 3;
  inline bool has_szname() const;
  inline void clear_szname();
  static const int kSzNameFieldNumber = 3;
  inline const ::std::string& szname() const;
  inline void set_szname(const ::std::string& value);
  inline void set_szname(const char* value);
  inline void set_szname(const void* value, size_t size);
  inline ::std::string* mutable_szname();
  inline ::std::string* release_szname();
  inline void set_allocated_szname(::std::string* szname);

  // @@protoc_insertion_point(class_scope:Msg_FANGJIANLT_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_szcontent();
  inline void clear_has_szcontent();
  inline void set_has_szname();
  inline void clear_has_szname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* szcontent_;
  ::std::string* szname_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_FANGJIANLT_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_VEC_C2S : public ::google::protobuf::Message {
 public:
  Msg_VEC_C2S();
  virtual ~Msg_VEC_C2S();

  Msg_VEC_C2S(const Msg_VEC_C2S& from);

  inline Msg_VEC_C2S& operator=(const Msg_VEC_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_VEC_C2S& default_instance();

  void Swap(Msg_VEC_C2S* other);

  // implements Message ----------------------------------------------

  Msg_VEC_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_VEC_C2S& from);
  void MergeFrom(const Msg_VEC_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required int32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // required int32 ingrass = 4;
  inline bool has_ingrass() const;
  inline void clear_ingrass();
  static const int kIngrassFieldNumber = 4;
  inline ::google::protobuf::int32 ingrass() const;
  inline void set_ingrass(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_VEC_C2S)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_ingrass();
  inline void clear_has_ingrass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 ingrass_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_VEC_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_VEC_S2C : public ::google::protobuf::Message {
 public:
  Msg_VEC_S2C();
  virtual ~Msg_VEC_S2C();

  Msg_VEC_S2C(const Msg_VEC_S2C& from);

  inline Msg_VEC_S2C& operator=(const Msg_VEC_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_VEC_S2C& default_instance();

  void Swap(Msg_VEC_S2C* other);

  // implements Message ----------------------------------------------

  Msg_VEC_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_VEC_S2C& from);
  void MergeFrom(const Msg_VEC_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required int32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // required int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 hide = 5;
  inline bool has_hide() const;
  inline void clear_hide();
  static const int kHideFieldNumber = 5;
  inline ::google::protobuf::int32 hide() const;
  inline void set_hide(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_VEC_S2C)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_hide();
  inline void clear_has_hide();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 hide_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_VEC_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_PICKSIDE_C2S : public ::google::protobuf::Message {
 public:
  Msg_PICKSIDE_C2S();
  virtual ~Msg_PICKSIDE_C2S();

  Msg_PICKSIDE_C2S(const Msg_PICKSIDE_C2S& from);

  inline Msg_PICKSIDE_C2S& operator=(const Msg_PICKSIDE_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_PICKSIDE_C2S& default_instance();

  void Swap(Msg_PICKSIDE_C2S* other);

  // implements Message ----------------------------------------------

  Msg_PICKSIDE_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_PICKSIDE_C2S& from);
  void MergeFrom(const Msg_PICKSIDE_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 side = 1;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 1;
  inline ::google::protobuf::int32 side() const;
  inline void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_PICKSIDE_C2S)
 private:
  inline void set_has_side();
  inline void clear_has_side();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 side_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_PICKSIDE_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_PICKSIDE_S2C : public ::google::protobuf::Message {
 public:
  Msg_PICKSIDE_S2C();
  virtual ~Msg_PICKSIDE_S2C();

  Msg_PICKSIDE_S2C(const Msg_PICKSIDE_S2C& from);

  inline Msg_PICKSIDE_S2C& operator=(const Msg_PICKSIDE_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_PICKSIDE_S2C& default_instance();

  void Swap(Msg_PICKSIDE_S2C* other);

  // implements Message ----------------------------------------------

  Msg_PICKSIDE_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_PICKSIDE_S2C& from);
  void MergeFrom(const Msg_PICKSIDE_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_PICKSIDE_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_PICKSIDE_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_AMMO_C2S : public ::google::protobuf::Message {
 public:
  Msg_AMMO_C2S();
  virtual ~Msg_AMMO_C2S();

  Msg_AMMO_C2S(const Msg_AMMO_C2S& from);

  inline Msg_AMMO_C2S& operator=(const Msg_AMMO_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_AMMO_C2S& default_instance();

  void Swap(Msg_AMMO_C2S* other);

  // implements Message ----------------------------------------------

  Msg_AMMO_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_AMMO_C2S& from);
  void MergeFrom(const Msg_AMMO_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required int32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id_shooter = 5;
  inline bool has_id_shooter() const;
  inline void clear_id_shooter();
  static const int kIdShooterFieldNumber = 5;
  inline ::google::protobuf::int32 id_shooter() const;
  inline void set_id_shooter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_AMMO_C2S)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id_shooter();
  inline void clear_has_id_shooter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_shooter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_AMMO_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_AMMO_S2C : public ::google::protobuf::Message {
 public:
  Msg_AMMO_S2C();
  virtual ~Msg_AMMO_S2C();

  Msg_AMMO_S2C(const Msg_AMMO_S2C& from);

  inline Msg_AMMO_S2C& operator=(const Msg_AMMO_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_AMMO_S2C& default_instance();

  void Swap(Msg_AMMO_S2C* other);

  // implements Message ----------------------------------------------

  Msg_AMMO_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_AMMO_S2C& from);
  void MergeFrom(const Msg_AMMO_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required int32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_AMMO_S2C)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_AMMO_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_DAMAGE_C2S : public ::google::protobuf::Message {
 public:
  Msg_DAMAGE_C2S();
  virtual ~Msg_DAMAGE_C2S();

  Msg_DAMAGE_C2S(const Msg_DAMAGE_C2S& from);

  inline Msg_DAMAGE_C2S& operator=(const Msg_DAMAGE_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_DAMAGE_C2S& default_instance();

  void Swap(Msg_DAMAGE_C2S* other);

  // implements Message ----------------------------------------------

  Msg_DAMAGE_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_DAMAGE_C2S& from);
  void MergeFrom(const Msg_DAMAGE_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 damage = 1;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 1;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // required int32 id_hurt = 2;
  inline bool has_id_hurt() const;
  inline void clear_id_hurt();
  static const int kIdHurtFieldNumber = 2;
  inline ::google::protobuf::int32 id_hurt() const;
  inline void set_id_hurt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_DAMAGE_C2S)
 private:
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_id_hurt();
  inline void clear_has_id_hurt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 id_hurt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_DAMAGE_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_DAMAGE_S2C : public ::google::protobuf::Message {
 public:
  Msg_DAMAGE_S2C();
  virtual ~Msg_DAMAGE_S2C();

  Msg_DAMAGE_S2C(const Msg_DAMAGE_S2C& from);

  inline Msg_DAMAGE_S2C& operator=(const Msg_DAMAGE_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_DAMAGE_S2C& default_instance();

  void Swap(Msg_DAMAGE_S2C* other);

  // implements Message ----------------------------------------------

  Msg_DAMAGE_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_DAMAGE_S2C& from);
  void MergeFrom(const Msg_DAMAGE_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 damage = 1;
  inline bool has_damage() const;
  inline void clear_damage();
  static const int kDamageFieldNumber = 1;
  inline ::google::protobuf::int32 damage() const;
  inline void set_damage(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_DAMAGE_S2C)
 private:
  inline void set_has_damage();
  inline void clear_has_damage();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_DAMAGE_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_GETITEM_S2C : public ::google::protobuf::Message {
 public:
  Msg_GETITEM_S2C();
  virtual ~Msg_GETITEM_S2C();

  Msg_GETITEM_S2C(const Msg_GETITEM_S2C& from);

  inline Msg_GETITEM_S2C& operator=(const Msg_GETITEM_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_GETITEM_S2C& default_instance();

  void Swap(Msg_GETITEM_S2C* other);

  // implements Message ----------------------------------------------

  Msg_GETITEM_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_GETITEM_S2C& from);
  void MergeFrom(const Msg_GETITEM_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::int32 kind() const;
  inline void set_kind(::google::protobuf::int32 value);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_GETITEM_S2C)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 kind_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_GETITEM_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_DEATH_S2C : public ::google::protobuf::Message {
 public:
  Msg_DEATH_S2C();
  virtual ~Msg_DEATH_S2C();

  Msg_DEATH_S2C(const Msg_DEATH_S2C& from);

  inline Msg_DEATH_S2C& operator=(const Msg_DEATH_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_DEATH_S2C& default_instance();

  void Swap(Msg_DEATH_S2C* other);

  // implements Message ----------------------------------------------

  Msg_DEATH_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_DEATH_S2C& from);
  void MergeFrom(const Msg_DEATH_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_DEATH_S2C)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_DEATH_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_POINTTAKING_S2C : public ::google::protobuf::Message {
 public:
  Msg_POINTTAKING_S2C();
  virtual ~Msg_POINTTAKING_S2C();

  Msg_POINTTAKING_S2C(const Msg_POINTTAKING_S2C& from);

  inline Msg_POINTTAKING_S2C& operator=(const Msg_POINTTAKING_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_POINTTAKING_S2C& default_instance();

  void Swap(Msg_POINTTAKING_S2C* other);

  // implements Message ----------------------------------------------

  Msg_POINTTAKING_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_POINTTAKING_S2C& from);
  void MergeFrom(const Msg_POINTTAKING_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // required int32 percent = 2;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 2;
  inline ::google::protobuf::int32 percent() const;
  inline void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_POINTTAKING_S2C)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_percent();
  inline void clear_has_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_POINTTAKING_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_POINTTAKEN_S2C : public ::google::protobuf::Message {
 public:
  Msg_POINTTAKEN_S2C();
  virtual ~Msg_POINTTAKEN_S2C();

  Msg_POINTTAKEN_S2C(const Msg_POINTTAKEN_S2C& from);

  inline Msg_POINTTAKEN_S2C& operator=(const Msg_POINTTAKEN_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_POINTTAKEN_S2C& default_instance();

  void Swap(Msg_POINTTAKEN_S2C* other);

  // implements Message ----------------------------------------------

  Msg_POINTTAKEN_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_POINTTAKEN_S2C& from);
  void MergeFrom(const Msg_POINTTAKEN_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // required int32 pointnumber = 2;
  inline bool has_pointnumber() const;
  inline void clear_pointnumber();
  static const int kPointnumberFieldNumber = 2;
  inline ::google::protobuf::int32 pointnumber() const;
  inline void set_pointnumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_POINTTAKEN_S2C)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_pointnumber();
  inline void clear_has_pointnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 pointnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_POINTTAKEN_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ADDSCORES_S2C : public ::google::protobuf::Message {
 public:
  Msg_ADDSCORES_S2C();
  virtual ~Msg_ADDSCORES_S2C();

  Msg_ADDSCORES_S2C(const Msg_ADDSCORES_S2C& from);

  inline Msg_ADDSCORES_S2C& operator=(const Msg_ADDSCORES_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ADDSCORES_S2C& default_instance();

  void Swap(Msg_ADDSCORES_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ADDSCORES_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ADDSCORES_S2C& from);
  void MergeFrom(const Msg_ADDSCORES_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 socres = 1;
  inline bool has_socres() const;
  inline void clear_socres();
  static const int kSocresFieldNumber = 1;
  inline ::google::protobuf::int32 socres() const;
  inline void set_socres(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ADDSCORES_S2C)
 private:
  inline void set_has_socres();
  inline void clear_has_socres();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 socres_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ADDSCORES_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ENDGAME_S2C : public ::google::protobuf::Message {
 public:
  Msg_ENDGAME_S2C();
  virtual ~Msg_ENDGAME_S2C();

  Msg_ENDGAME_S2C(const Msg_ENDGAME_S2C& from);

  inline Msg_ENDGAME_S2C& operator=(const Msg_ENDGAME_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ENDGAME_S2C& default_instance();

  void Swap(Msg_ENDGAME_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ENDGAME_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ENDGAME_S2C& from);
  void MergeFrom(const Msg_ENDGAME_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ENDGAME_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ENDGAME_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_POINTDESPUTE_S2C : public ::google::protobuf::Message {
 public:
  Msg_POINTDESPUTE_S2C();
  virtual ~Msg_POINTDESPUTE_S2C();

  Msg_POINTDESPUTE_S2C(const Msg_POINTDESPUTE_S2C& from);

  inline Msg_POINTDESPUTE_S2C& operator=(const Msg_POINTDESPUTE_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_POINTDESPUTE_S2C& default_instance();

  void Swap(Msg_POINTDESPUTE_S2C* other);

  // implements Message ----------------------------------------------

  Msg_POINTDESPUTE_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_POINTDESPUTE_S2C& from);
  void MergeFrom(const Msg_POINTDESPUTE_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_POINTDESPUTE_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_POINTDESPUTE_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ROOMINFO_S2C : public ::google::protobuf::Message {
 public:
  Msg_ROOMINFO_S2C();
  virtual ~Msg_ROOMINFO_S2C();

  Msg_ROOMINFO_S2C(const Msg_ROOMINFO_S2C& from);

  inline Msg_ROOMINFO_S2C& operator=(const Msg_ROOMINFO_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ROOMINFO_S2C& default_instance();

  void Swap(Msg_ROOMINFO_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ROOMINFO_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ROOMINFO_S2C& from);
  void MergeFrom(const Msg_ROOMINFO_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 masterid = 1;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasteridFieldNumber = 1;
  inline ::google::protobuf::int32 masterid() const;
  inline void set_masterid(::google::protobuf::int32 value);

  // required bytes masterusername = 2;
  inline bool has_masterusername() const;
  inline void clear_masterusername();
  static const int kMasterusernameFieldNumber = 2;
  inline const ::std::string& masterusername() const;
  inline void set_masterusername(const ::std::string& value);
  inline void set_masterusername(const char* value);
  inline void set_masterusername(const void* value, size_t size);
  inline ::std::string* mutable_masterusername();
  inline ::std::string* release_masterusername();
  inline void set_allocated_masterusername(::std::string* masterusername);

  // required int32 roomid = 3;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 3;
  inline ::google::protobuf::int32 roomid() const;
  inline void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ROOMINFO_S2C)
 private:
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_masterusername();
  inline void clear_has_masterusername();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* masterusername_;
  ::google::protobuf::int32 masterid_;
  ::google::protobuf::int32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ROOMINFO_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ROOMLIST_S2C : public ::google::protobuf::Message {
 public:
  Msg_ROOMLIST_S2C();
  virtual ~Msg_ROOMLIST_S2C();

  Msg_ROOMLIST_S2C(const Msg_ROOMLIST_S2C& from);

  inline Msg_ROOMLIST_S2C& operator=(const Msg_ROOMLIST_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ROOMLIST_S2C& default_instance();

  void Swap(Msg_ROOMLIST_S2C* other);

  // implements Message ----------------------------------------------

  Msg_ROOMLIST_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ROOMLIST_S2C& from);
  void MergeFrom(const Msg_ROOMLIST_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Msg_ROOMINFO_S2C room = 1;
  inline int room_size() const;
  inline void clear_room();
  static const int kRoomFieldNumber = 1;
  inline const ::Msg_ROOMINFO_S2C& room(int index) const;
  inline ::Msg_ROOMINFO_S2C* mutable_room(int index);
  inline ::Msg_ROOMINFO_S2C* add_room();
  inline const ::google::protobuf::RepeatedPtrField< ::Msg_ROOMINFO_S2C >&
      room() const;
  inline ::google::protobuf::RepeatedPtrField< ::Msg_ROOMINFO_S2C >*
      mutable_room();

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ROOMLIST_S2C)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Msg_ROOMINFO_S2C > room_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ROOMLIST_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_ROOMINFOREQUEST_C2S : public ::google::protobuf::Message {
 public:
  Msg_ROOMINFOREQUEST_C2S();
  virtual ~Msg_ROOMINFOREQUEST_C2S();

  Msg_ROOMINFOREQUEST_C2S(const Msg_ROOMINFOREQUEST_C2S& from);

  inline Msg_ROOMINFOREQUEST_C2S& operator=(const Msg_ROOMINFOREQUEST_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_ROOMINFOREQUEST_C2S& default_instance();

  void Swap(Msg_ROOMINFOREQUEST_C2S* other);

  // implements Message ----------------------------------------------

  Msg_ROOMINFOREQUEST_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_ROOMINFOREQUEST_C2S& from);
  void MergeFrom(const Msg_ROOMINFOREQUEST_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_ROOMINFOREQUEST_C2S)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_ROOMINFOREQUEST_C2S* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT Msg_USERINFO_S2C : public ::google::protobuf::Message {
 public:
  Msg_USERINFO_S2C();
  virtual ~Msg_USERINFO_S2C();

  Msg_USERINFO_S2C(const Msg_USERINFO_S2C& from);

  inline Msg_USERINFO_S2C& operator=(const Msg_USERINFO_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_USERINFO_S2C& default_instance();

  void Swap(Msg_USERINFO_S2C* other);

  // implements Message ----------------------------------------------

  Msg_USERINFO_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg_USERINFO_S2C& from);
  void MergeFrom(const Msg_USERINFO_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bytes username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const void* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required int32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // required int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 team = 5;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 5;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_USERINFO_S2C)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_team();
  inline void clear_has_team();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 team_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static Msg_USERINFO_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MSG_USERINFOLISTOS_S2C : public ::google::protobuf::Message {
 public:
  MSG_USERINFOLISTOS_S2C();
  virtual ~MSG_USERINFOLISTOS_S2C();

  MSG_USERINFOLISTOS_S2C(const MSG_USERINFOLISTOS_S2C& from);

  inline MSG_USERINFOLISTOS_S2C& operator=(const MSG_USERINFOLISTOS_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_USERINFOLISTOS_S2C& default_instance();

  void Swap(MSG_USERINFOLISTOS_S2C* other);

  // implements Message ----------------------------------------------

  MSG_USERINFOLISTOS_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_USERINFOLISTOS_S2C& from);
  void MergeFrom(const MSG_USERINFOLISTOS_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Msg_USERINFO_S2C userinfo = 1;
  inline int userinfo_size() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  inline const ::Msg_USERINFO_S2C& userinfo(int index) const;
  inline ::Msg_USERINFO_S2C* mutable_userinfo(int index);
  inline ::Msg_USERINFO_S2C* add_userinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Msg_USERINFO_S2C >&
      userinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Msg_USERINFO_S2C >*
      mutable_userinfo();

  // @@protoc_insertion_point(class_scope:MSG_USERINFOLISTOS_S2C)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Msg_USERINFO_S2C > userinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static MSG_USERINFOLISTOS_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MSG_VECOS_S2C : public ::google::protobuf::Message {
 public:
  MSG_VECOS_S2C();
  virtual ~MSG_VECOS_S2C();

  MSG_VECOS_S2C(const MSG_VECOS_S2C& from);

  inline MSG_VECOS_S2C& operator=(const MSG_VECOS_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_VECOS_S2C& default_instance();

  void Swap(MSG_VECOS_S2C* other);

  // implements Message ----------------------------------------------

  MSG_VECOS_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_VECOS_S2C& from);
  void MergeFrom(const MSG_VECOS_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required int32 direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // required int32 ingrass = 4;
  inline bool has_ingrass() const;
  inline void clear_ingrass();
  static const int kIngrassFieldNumber = 4;
  inline ::google::protobuf::int32 ingrass() const;
  inline void set_ingrass(::google::protobuf::int32 value);

  // required int32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MSG_VECOS_S2C)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_ingrass();
  inline void clear_has_ingrass();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 ingrass_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static MSG_VECOS_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MSG_VECOSLIST_S2C : public ::google::protobuf::Message {
 public:
  MSG_VECOSLIST_S2C();
  virtual ~MSG_VECOSLIST_S2C();

  MSG_VECOSLIST_S2C(const MSG_VECOSLIST_S2C& from);

  inline MSG_VECOSLIST_S2C& operator=(const MSG_VECOSLIST_S2C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_VECOSLIST_S2C& default_instance();

  void Swap(MSG_VECOSLIST_S2C* other);

  // implements Message ----------------------------------------------

  MSG_VECOSLIST_S2C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_VECOSLIST_S2C& from);
  void MergeFrom(const MSG_VECOSLIST_S2C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MSG_VECOS_S2C vec = 1;
  inline int vec_size() const;
  inline void clear_vec();
  static const int kVecFieldNumber = 1;
  inline const ::MSG_VECOS_S2C& vec(int index) const;
  inline ::MSG_VECOS_S2C* mutable_vec(int index);
  inline ::MSG_VECOS_S2C* add_vec();
  inline const ::google::protobuf::RepeatedPtrField< ::MSG_VECOS_S2C >&
      vec() const;
  inline ::google::protobuf::RepeatedPtrField< ::MSG_VECOS_S2C >*
      mutable_vec();

  // @@protoc_insertion_point(class_scope:MSG_VECOSLIST_S2C)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MSG_VECOS_S2C > vec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static MSG_VECOSLIST_S2C* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MSG_INFOAC_C2S : public ::google::protobuf::Message {
 public:
  MSG_INFOAC_C2S();
  virtual ~MSG_INFOAC_C2S();

  MSG_INFOAC_C2S(const MSG_INFOAC_C2S& from);

  inline MSG_INFOAC_C2S& operator=(const MSG_INFOAC_C2S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_INFOAC_C2S& default_instance();

  void Swap(MSG_INFOAC_C2S* other);

  // implements Message ----------------------------------------------

  MSG_INFOAC_C2S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_INFOAC_C2S& from);
  void MergeFrom(const MSG_INFOAC_C2S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MSG_INFOAC_C2S)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void LIBPROTOC_EXPORT protobuf_AddDesc_Msg_2eproto();
  friend void protobuf_AssignDesc_Msg_2eproto();
  friend void protobuf_ShutdownFile_Msg_2eproto();

  void InitAsDefaultInstance();
  static MSG_INFOAC_C2S* default_instance_;
};
// ===================================================================


// ===================================================================

// Msg_Register_C2S

// required bytes szName = 1;
inline bool Msg_Register_C2S::has_szname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Register_C2S::set_has_szname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Register_C2S::clear_has_szname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Register_C2S::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& Msg_Register_C2S::szname() const {
  return *szname_;
}
inline void Msg_Register_C2S::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_Register_C2S::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_Register_C2S::set_szname(const void* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Register_C2S::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* Msg_Register_C2S::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Register_C2S::set_allocated_szname(::std::string* szname) {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    delete szname_;
  }
  if (szname) {
    set_has_szname();
    szname_ = szname;
  } else {
    clear_has_szname();
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes szPassword = 2;
inline bool Msg_Register_C2S::has_szpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Register_C2S::set_has_szpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Register_C2S::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Register_C2S::clear_szpassword() {
  if (szpassword_ != &::google::protobuf::internal::kEmptyString) {
    szpassword_->clear();
  }
  clear_has_szpassword();
}
inline const ::std::string& Msg_Register_C2S::szpassword() const {
  return *szpassword_;
}
inline void Msg_Register_C2S::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
}
inline void Msg_Register_C2S::set_szpassword(const char* value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
}
inline void Msg_Register_C2S::set_szpassword(const void* value, size_t size) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Register_C2S::mutable_szpassword() {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  return szpassword_;
}
inline ::std::string* Msg_Register_C2S::release_szpassword() {
  clear_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szpassword_;
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Register_C2S::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword_ != &::google::protobuf::internal::kEmptyString) {
    delete szpassword_;
  }
  if (szpassword) {
    set_has_szpassword();
    szpassword_ = szpassword;
  } else {
    clear_has_szpassword();
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Msg_Register_S2C

// required int32 result = 1;
inline bool Msg_Register_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Register_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Register_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Register_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_Register_S2C::result() const {
  return result_;
}
inline void Msg_Register_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_Login_C2S

// required bytes szName = 1;
inline bool Msg_Login_C2S::has_szname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Login_C2S::set_has_szname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Login_C2S::clear_has_szname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Login_C2S::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& Msg_Login_C2S::szname() const {
  return *szname_;
}
inline void Msg_Login_C2S::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_Login_C2S::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_Login_C2S::set_szname(const void* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Login_C2S::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* Msg_Login_C2S::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Login_C2S::set_allocated_szname(::std::string* szname) {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    delete szname_;
  }
  if (szname) {
    set_has_szname();
    szname_ = szname;
  } else {
    clear_has_szname();
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes szPassword = 2;
inline bool Msg_Login_C2S::has_szpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Login_C2S::set_has_szpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Login_C2S::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Login_C2S::clear_szpassword() {
  if (szpassword_ != &::google::protobuf::internal::kEmptyString) {
    szpassword_->clear();
  }
  clear_has_szpassword();
}
inline const ::std::string& Msg_Login_C2S::szpassword() const {
  return *szpassword_;
}
inline void Msg_Login_C2S::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
}
inline void Msg_Login_C2S::set_szpassword(const char* value) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(value);
}
inline void Msg_Login_C2S::set_szpassword(const void* value, size_t size) {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  szpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_Login_C2S::mutable_szpassword() {
  set_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    szpassword_ = new ::std::string;
  }
  return szpassword_;
}
inline ::std::string* Msg_Login_C2S::release_szpassword() {
  clear_has_szpassword();
  if (szpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szpassword_;
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_Login_C2S::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword_ != &::google::protobuf::internal::kEmptyString) {
    delete szpassword_;
  }
  if (szpassword) {
    set_has_szpassword();
    szpassword_ = szpassword;
  } else {
    clear_has_szpassword();
    szpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Msg_Login_S2C

// required int32 result = 1;
inline bool Msg_Login_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Login_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Login_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Login_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_Login_S2C::result() const {
  return result_;
}
inline void Msg_Login_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 id = 2;
inline bool Msg_Login_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Login_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Login_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Login_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_Login_S2C::id() const {
  return id_;
}
inline void Msg_Login_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_CreateRoom_C2S

// required int32 id = 1;
inline bool Msg_CreateRoom_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_CreateRoom_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_CreateRoom_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_CreateRoom_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_CreateRoom_C2S::id() const {
  return id_;
}
inline void Msg_CreateRoom_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_CreateRoom_S2C

// required int32 result = 1;
inline bool Msg_CreateRoom_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_CreateRoom_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_CreateRoom_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_CreateRoom_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_CreateRoom_S2C::result() const {
  return result_;
}
inline void Msg_CreateRoom_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_EnterRoom_C2S

// required int32 id = 1;
inline bool Msg_EnterRoom_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_EnterRoom_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_EnterRoom_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_EnterRoom_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_EnterRoom_C2S::id() const {
  return id_;
}
inline void Msg_EnterRoom_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_EnterRoom_S2C

// required int32 result = 1;
inline bool Msg_EnterRoom_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_EnterRoom_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_EnterRoom_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_EnterRoom_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_EnterRoom_S2C::result() const {
  return result_;
}
inline void Msg_EnterRoom_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 number = 2;
inline bool Msg_EnterRoom_S2C::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_EnterRoom_S2C::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_EnterRoom_S2C::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_EnterRoom_S2C::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Msg_EnterRoom_S2C::number() const {
  return number_;
}
inline void Msg_EnterRoom_S2C::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// optional bytes szName = 3;
inline bool Msg_EnterRoom_S2C::has_szname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_EnterRoom_S2C::set_has_szname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_EnterRoom_S2C::clear_has_szname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_EnterRoom_S2C::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& Msg_EnterRoom_S2C::szname() const {
  return *szname_;
}
inline void Msg_EnterRoom_S2C::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_EnterRoom_S2C::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_EnterRoom_S2C::set_szname(const void* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_EnterRoom_S2C::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* Msg_EnterRoom_S2C::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_EnterRoom_S2C::set_allocated_szname(::std::string* szname) {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    delete szname_;
  }
  if (szname) {
    set_has_szname();
    szname_ = szname;
  } else {
    clear_has_szname();
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Msg_ChangeState_C2S

// optional int32 number1 = 2;
inline bool Msg_ChangeState_C2S::has_number1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ChangeState_C2S::set_has_number1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ChangeState_C2S::clear_has_number1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ChangeState_C2S::clear_number1() {
  number1_ = 0;
  clear_has_number1();
}
inline ::google::protobuf::int32 Msg_ChangeState_C2S::number1() const {
  return number1_;
}
inline void Msg_ChangeState_C2S::set_number1(::google::protobuf::int32 value) {
  set_has_number1();
  number1_ = value;
}

// optional int32 number2 = 3;
inline bool Msg_ChangeState_C2S::has_number2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ChangeState_C2S::set_has_number2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ChangeState_C2S::clear_has_number2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ChangeState_C2S::clear_number2() {
  number2_ = 0;
  clear_has_number2();
}
inline ::google::protobuf::int32 Msg_ChangeState_C2S::number2() const {
  return number2_;
}
inline void Msg_ChangeState_C2S::set_number2(::google::protobuf::int32 value) {
  set_has_number2();
  number2_ = value;
}

// optional int32 type = 4;
inline bool Msg_ChangeState_C2S::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_ChangeState_C2S::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_ChangeState_C2S::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_ChangeState_C2S::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_ChangeState_C2S::type() const {
  return type_;
}
inline void Msg_ChangeState_C2S::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 ready = 5;
inline bool Msg_ChangeState_C2S::has_ready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_ChangeState_C2S::set_has_ready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_ChangeState_C2S::clear_has_ready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_ChangeState_C2S::clear_ready() {
  ready_ = 0;
  clear_has_ready();
}
inline ::google::protobuf::int32 Msg_ChangeState_C2S::ready() const {
  return ready_;
}
inline void Msg_ChangeState_C2S::set_ready(::google::protobuf::int32 value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// Msg_ChangeState_S2C

// required int32 result = 1;
inline bool Msg_ChangeState_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ChangeState_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ChangeState_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ChangeState_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_ChangeState_S2C::result() const {
  return result_;
}
inline void Msg_ChangeState_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 number1 = 2;
inline bool Msg_ChangeState_S2C::has_number1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ChangeState_S2C::set_has_number1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ChangeState_S2C::clear_has_number1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ChangeState_S2C::clear_number1() {
  number1_ = 0;
  clear_has_number1();
}
inline ::google::protobuf::int32 Msg_ChangeState_S2C::number1() const {
  return number1_;
}
inline void Msg_ChangeState_S2C::set_number1(::google::protobuf::int32 value) {
  set_has_number1();
  number1_ = value;
}

// optional int32 number2 = 3;
inline bool Msg_ChangeState_S2C::has_number2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_ChangeState_S2C::set_has_number2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_ChangeState_S2C::clear_has_number2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_ChangeState_S2C::clear_number2() {
  number2_ = 0;
  clear_has_number2();
}
inline ::google::protobuf::int32 Msg_ChangeState_S2C::number2() const {
  return number2_;
}
inline void Msg_ChangeState_S2C::set_number2(::google::protobuf::int32 value) {
  set_has_number2();
  number2_ = value;
}

// optional int32 type = 4;
inline bool Msg_ChangeState_S2C::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_ChangeState_S2C::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_ChangeState_S2C::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_ChangeState_S2C::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_ChangeState_S2C::type() const {
  return type_;
}
inline void Msg_ChangeState_S2C::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 ready = 5;
inline bool Msg_ChangeState_S2C::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_ChangeState_S2C::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_ChangeState_S2C::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_ChangeState_S2C::clear_ready() {
  ready_ = 0;
  clear_has_ready();
}
inline ::google::protobuf::int32 Msg_ChangeState_S2C::ready() const {
  return ready_;
}
inline void Msg_ChangeState_S2C::set_ready(::google::protobuf::int32 value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// Msg_Expel_C2S

// required int32 number = 1;
inline bool Msg_Expel_C2S::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Expel_C2S::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Expel_C2S::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Expel_C2S::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Msg_Expel_C2S::number() const {
  return number_;
}
inline void Msg_Expel_C2S::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// required int32 id = 2;
inline bool Msg_Expel_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Expel_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Expel_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Expel_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_Expel_C2S::id() const {
  return id_;
}
inline void Msg_Expel_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 userid = 3;
inline bool Msg_Expel_C2S::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_Expel_C2S::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_Expel_C2S::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_Expel_C2S::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
inline ::google::protobuf::int32 Msg_Expel_C2S::userid() const {
  return userid_;
}
inline void Msg_Expel_C2S::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// Msg_Expel_S2C

// required int32 result = 1;
inline bool Msg_Expel_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_Expel_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_Expel_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_Expel_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_Expel_S2C::result() const {
  return result_;
}
inline void Msg_Expel_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 number = 2;
inline bool Msg_Expel_S2C::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_Expel_S2C::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_Expel_S2C::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_Expel_S2C::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Msg_Expel_S2C::number() const {
  return number_;
}
inline void Msg_Expel_S2C::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// Msg_StartGame_C2S

// required int32 id = 1;
inline bool Msg_StartGame_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_StartGame_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_StartGame_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_StartGame_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_StartGame_C2S::id() const {
  return id_;
}
inline void Msg_StartGame_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_StartGame_S2C

// required int32 result = 1;
inline bool Msg_StartGame_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_StartGame_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_StartGame_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_StartGame_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_StartGame_S2C::result() const {
  return result_;
}
inline void Msg_StartGame_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_ExitRoom_C2S

// required int32 id = 1;
inline bool Msg_ExitRoom_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ExitRoom_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ExitRoom_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ExitRoom_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_ExitRoom_C2S::id() const {
  return id_;
}
inline void Msg_ExitRoom_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 number = 2;
inline bool Msg_ExitRoom_C2S::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ExitRoom_C2S::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ExitRoom_C2S::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ExitRoom_C2S::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Msg_ExitRoom_C2S::number() const {
  return number_;
}
inline void Msg_ExitRoom_C2S::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// Msg_ExitRoom_S2C

// required int32 result = 1;
inline bool Msg_ExitRoom_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ExitRoom_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ExitRoom_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ExitRoom_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_ExitRoom_S2C::result() const {
  return result_;
}
inline void Msg_ExitRoom_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 number = 2;
inline bool Msg_ExitRoom_S2C::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ExitRoom_S2C::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ExitRoom_S2C::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ExitRoom_S2C::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Msg_ExitRoom_S2C::number() const {
  return number_;
}
inline void Msg_ExitRoom_S2C::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// Msg_GetRoomMen_C2S

// required int32 id = 1;
inline bool Msg_GetRoomMen_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_GetRoomMen_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_GetRoomMen_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_GetRoomMen_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_GetRoomMen_C2S::id() const {
  return id_;
}
inline void Msg_GetRoomMen_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_GetRoomMen_S2C

// required int32 result = 1;
inline bool Msg_GetRoomMen_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_GetRoomMen_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_GetRoomMen_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_GetRoomMen_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_GetRoomMen_S2C::result() const {
  return result_;
}
inline void Msg_GetRoomMen_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated int32 number = 2;
inline int Msg_GetRoomMen_S2C::number_size() const {
  return number_.size();
}
inline void Msg_GetRoomMen_S2C::clear_number() {
  number_.Clear();
}
inline ::google::protobuf::int32 Msg_GetRoomMen_S2C::number(int index) const {
  return number_.Get(index);
}
inline void Msg_GetRoomMen_S2C::set_number(int index, ::google::protobuf::int32 value) {
  number_.Set(index, value);
}
inline void Msg_GetRoomMen_S2C::add_number(::google::protobuf::int32 value) {
  number_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Msg_GetRoomMen_S2C::number() const {
  return number_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Msg_GetRoomMen_S2C::mutable_number() {
  return &number_;
}

// repeated bytes szName = 3;
inline int Msg_GetRoomMen_S2C::szname_size() const {
  return szname_.size();
}
inline void Msg_GetRoomMen_S2C::clear_szname() {
  szname_.Clear();
}
inline const ::std::string& Msg_GetRoomMen_S2C::szname(int index) const {
  return szname_.Get(index);
}
inline ::std::string* Msg_GetRoomMen_S2C::mutable_szname(int index) {
  return szname_.Mutable(index);
}
inline void Msg_GetRoomMen_S2C::set_szname(int index, const ::std::string& value) {
  szname_.Mutable(index)->assign(value);
}
inline void Msg_GetRoomMen_S2C::set_szname(int index, const char* value) {
  szname_.Mutable(index)->assign(value);
}
inline void Msg_GetRoomMen_S2C::set_szname(int index, const void* value, size_t size) {
  szname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_GetRoomMen_S2C::add_szname() {
  return szname_.Add();
}
inline void Msg_GetRoomMen_S2C::add_szname(const ::std::string& value) {
  szname_.Add()->assign(value);
}
inline void Msg_GetRoomMen_S2C::add_szname(const char* value) {
  szname_.Add()->assign(value);
}
inline void Msg_GetRoomMen_S2C::add_szname(const void* value, size_t size) {
  szname_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Msg_GetRoomMen_S2C::szname() const {
  return szname_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Msg_GetRoomMen_S2C::mutable_szname() {
  return &szname_;
}

// repeated int32 tankType = 4;
inline int Msg_GetRoomMen_S2C::tanktype_size() const {
  return tanktype_.size();
}
inline void Msg_GetRoomMen_S2C::clear_tanktype() {
  tanktype_.Clear();
}
inline ::google::protobuf::int32 Msg_GetRoomMen_S2C::tanktype(int index) const {
  return tanktype_.Get(index);
}
inline void Msg_GetRoomMen_S2C::set_tanktype(int index, ::google::protobuf::int32 value) {
  tanktype_.Set(index, value);
}
inline void Msg_GetRoomMen_S2C::add_tanktype(::google::protobuf::int32 value) {
  tanktype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Msg_GetRoomMen_S2C::tanktype() const {
  return tanktype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Msg_GetRoomMen_S2C::mutable_tanktype() {
  return &tanktype_;
}

// repeated int32 ready = 5;
inline int Msg_GetRoomMen_S2C::ready_size() const {
  return ready_.size();
}
inline void Msg_GetRoomMen_S2C::clear_ready() {
  ready_.Clear();
}
inline ::google::protobuf::int32 Msg_GetRoomMen_S2C::ready(int index) const {
  return ready_.Get(index);
}
inline void Msg_GetRoomMen_S2C::set_ready(int index, ::google::protobuf::int32 value) {
  ready_.Set(index, value);
}
inline void Msg_GetRoomMen_S2C::add_ready(::google::protobuf::int32 value) {
  ready_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Msg_GetRoomMen_S2C::ready() const {
  return ready_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Msg_GetRoomMen_S2C::mutable_ready() {
  return &ready_;
}

// -------------------------------------------------------------------

// Msg_FANGJIANLT_C2S

// required bytes szContent = 1;
inline bool Msg_FANGJIANLT_C2S::has_szcontent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_FANGJIANLT_C2S::set_has_szcontent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_FANGJIANLT_C2S::clear_has_szcontent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_FANGJIANLT_C2S::clear_szcontent() {
  if (szcontent_ != &::google::protobuf::internal::kEmptyString) {
    szcontent_->clear();
  }
  clear_has_szcontent();
}
inline const ::std::string& Msg_FANGJIANLT_C2S::szcontent() const {
  return *szcontent_;
}
inline void Msg_FANGJIANLT_C2S::set_szcontent(const ::std::string& value) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(value);
}
inline void Msg_FANGJIANLT_C2S::set_szcontent(const char* value) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(value);
}
inline void Msg_FANGJIANLT_C2S::set_szcontent(const void* value, size_t size) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_FANGJIANLT_C2S::mutable_szcontent() {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  return szcontent_;
}
inline ::std::string* Msg_FANGJIANLT_C2S::release_szcontent() {
  clear_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szcontent_;
    szcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_FANGJIANLT_C2S::set_allocated_szcontent(::std::string* szcontent) {
  if (szcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete szcontent_;
  }
  if (szcontent) {
    set_has_szcontent();
    szcontent_ = szcontent;
  } else {
    clear_has_szcontent();
    szcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes szName = 2;
inline bool Msg_FANGJIANLT_C2S::has_szname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_FANGJIANLT_C2S::set_has_szname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_FANGJIANLT_C2S::clear_has_szname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_FANGJIANLT_C2S::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& Msg_FANGJIANLT_C2S::szname() const {
  return *szname_;
}
inline void Msg_FANGJIANLT_C2S::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_FANGJIANLT_C2S::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_FANGJIANLT_C2S::set_szname(const void* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_FANGJIANLT_C2S::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* Msg_FANGJIANLT_C2S::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_FANGJIANLT_C2S::set_allocated_szname(::std::string* szname) {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    delete szname_;
  }
  if (szname) {
    set_has_szname();
    szname_ = szname;
  } else {
    clear_has_szname();
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 houseid = 3;
inline bool Msg_FANGJIANLT_C2S::has_houseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_FANGJIANLT_C2S::set_has_houseid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_FANGJIANLT_C2S::clear_has_houseid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_FANGJIANLT_C2S::clear_houseid() {
  houseid_ = 0;
  clear_has_houseid();
}
inline ::google::protobuf::int32 Msg_FANGJIANLT_C2S::houseid() const {
  return houseid_;
}
inline void Msg_FANGJIANLT_C2S::set_houseid(::google::protobuf::int32 value) {
  set_has_houseid();
  houseid_ = value;
}

// -------------------------------------------------------------------

// Msg_FANGJIANLT_S2C

// required int32 result = 1;
inline bool Msg_FANGJIANLT_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_FANGJIANLT_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_FANGJIANLT_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_FANGJIANLT_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_FANGJIANLT_S2C::result() const {
  return result_;
}
inline void Msg_FANGJIANLT_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional bytes szContent = 2;
inline bool Msg_FANGJIANLT_S2C::has_szcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_FANGJIANLT_S2C::set_has_szcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_FANGJIANLT_S2C::clear_has_szcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_FANGJIANLT_S2C::clear_szcontent() {
  if (szcontent_ != &::google::protobuf::internal::kEmptyString) {
    szcontent_->clear();
  }
  clear_has_szcontent();
}
inline const ::std::string& Msg_FANGJIANLT_S2C::szcontent() const {
  return *szcontent_;
}
inline void Msg_FANGJIANLT_S2C::set_szcontent(const ::std::string& value) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(value);
}
inline void Msg_FANGJIANLT_S2C::set_szcontent(const char* value) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(value);
}
inline void Msg_FANGJIANLT_S2C::set_szcontent(const void* value, size_t size) {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  szcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_FANGJIANLT_S2C::mutable_szcontent() {
  set_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    szcontent_ = new ::std::string;
  }
  return szcontent_;
}
inline ::std::string* Msg_FANGJIANLT_S2C::release_szcontent() {
  clear_has_szcontent();
  if (szcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szcontent_;
    szcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_FANGJIANLT_S2C::set_allocated_szcontent(::std::string* szcontent) {
  if (szcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete szcontent_;
  }
  if (szcontent) {
    set_has_szcontent();
    szcontent_ = szcontent;
  } else {
    clear_has_szcontent();
    szcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes szName = 3;
inline bool Msg_FANGJIANLT_S2C::has_szname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_FANGJIANLT_S2C::set_has_szname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_FANGJIANLT_S2C::clear_has_szname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_FANGJIANLT_S2C::clear_szname() {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    szname_->clear();
  }
  clear_has_szname();
}
inline const ::std::string& Msg_FANGJIANLT_S2C::szname() const {
  return *szname_;
}
inline void Msg_FANGJIANLT_S2C::set_szname(const ::std::string& value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_FANGJIANLT_S2C::set_szname(const char* value) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(value);
}
inline void Msg_FANGJIANLT_S2C::set_szname(const void* value, size_t size) {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  szname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_FANGJIANLT_S2C::mutable_szname() {
  set_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    szname_ = new ::std::string;
  }
  return szname_;
}
inline ::std::string* Msg_FANGJIANLT_S2C::release_szname() {
  clear_has_szname();
  if (szname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = szname_;
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_FANGJIANLT_S2C::set_allocated_szname(::std::string* szname) {
  if (szname_ != &::google::protobuf::internal::kEmptyString) {
    delete szname_;
  }
  if (szname) {
    set_has_szname();
    szname_ = szname;
  } else {
    clear_has_szname();
    szname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Msg_VEC_C2S

// required float x = 1;
inline bool Msg_VEC_C2S::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_VEC_C2S::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_VEC_C2S::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_VEC_C2S::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Msg_VEC_C2S::x() const {
  return x_;
}
inline void Msg_VEC_C2S::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Msg_VEC_C2S::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_VEC_C2S::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_VEC_C2S::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_VEC_C2S::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Msg_VEC_C2S::y() const {
  return y_;
}
inline void Msg_VEC_C2S::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 direction = 3;
inline bool Msg_VEC_C2S::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_VEC_C2S::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_VEC_C2S::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_VEC_C2S::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Msg_VEC_C2S::direction() const {
  return direction_;
}
inline void Msg_VEC_C2S::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
}

// required int32 ingrass = 4;
inline bool Msg_VEC_C2S::has_ingrass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_VEC_C2S::set_has_ingrass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_VEC_C2S::clear_has_ingrass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_VEC_C2S::clear_ingrass() {
  ingrass_ = 0;
  clear_has_ingrass();
}
inline ::google::protobuf::int32 Msg_VEC_C2S::ingrass() const {
  return ingrass_;
}
inline void Msg_VEC_C2S::set_ingrass(::google::protobuf::int32 value) {
  set_has_ingrass();
  ingrass_ = value;
}

// -------------------------------------------------------------------

// Msg_VEC_S2C

// required float x = 1;
inline bool Msg_VEC_S2C::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_VEC_S2C::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_VEC_S2C::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_VEC_S2C::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Msg_VEC_S2C::x() const {
  return x_;
}
inline void Msg_VEC_S2C::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Msg_VEC_S2C::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_VEC_S2C::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_VEC_S2C::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_VEC_S2C::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Msg_VEC_S2C::y() const {
  return y_;
}
inline void Msg_VEC_S2C::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 direction = 3;
inline bool Msg_VEC_S2C::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_VEC_S2C::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_VEC_S2C::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_VEC_S2C::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Msg_VEC_S2C::direction() const {
  return direction_;
}
inline void Msg_VEC_S2C::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
}

// required int32 id = 4;
inline bool Msg_VEC_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_VEC_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_VEC_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_VEC_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_VEC_S2C::id() const {
  return id_;
}
inline void Msg_VEC_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 hide = 5;
inline bool Msg_VEC_S2C::has_hide() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_VEC_S2C::set_has_hide() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_VEC_S2C::clear_has_hide() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_VEC_S2C::clear_hide() {
  hide_ = 0;
  clear_has_hide();
}
inline ::google::protobuf::int32 Msg_VEC_S2C::hide() const {
  return hide_;
}
inline void Msg_VEC_S2C::set_hide(::google::protobuf::int32 value) {
  set_has_hide();
  hide_ = value;
}

// -------------------------------------------------------------------

// Msg_PICKSIDE_C2S

// required int32 side = 1;
inline bool Msg_PICKSIDE_C2S::has_side() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_PICKSIDE_C2S::set_has_side() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_PICKSIDE_C2S::clear_has_side() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_PICKSIDE_C2S::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 Msg_PICKSIDE_C2S::side() const {
  return side_;
}
inline void Msg_PICKSIDE_C2S::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
}

// -------------------------------------------------------------------

// Msg_PICKSIDE_S2C

// required int32 result = 1;
inline bool Msg_PICKSIDE_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_PICKSIDE_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_PICKSIDE_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_PICKSIDE_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_PICKSIDE_S2C::result() const {
  return result_;
}
inline void Msg_PICKSIDE_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_AMMO_C2S

// required float x = 1;
inline bool Msg_AMMO_C2S::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_AMMO_C2S::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_AMMO_C2S::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_AMMO_C2S::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Msg_AMMO_C2S::x() const {
  return x_;
}
inline void Msg_AMMO_C2S::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Msg_AMMO_C2S::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_AMMO_C2S::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_AMMO_C2S::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_AMMO_C2S::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Msg_AMMO_C2S::y() const {
  return y_;
}
inline void Msg_AMMO_C2S::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 direction = 3;
inline bool Msg_AMMO_C2S::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_AMMO_C2S::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_AMMO_C2S::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_AMMO_C2S::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Msg_AMMO_C2S::direction() const {
  return direction_;
}
inline void Msg_AMMO_C2S::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
}

// required int32 type = 4;
inline bool Msg_AMMO_C2S::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_AMMO_C2S::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_AMMO_C2S::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_AMMO_C2S::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_AMMO_C2S::type() const {
  return type_;
}
inline void Msg_AMMO_C2S::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id_shooter = 5;
inline bool Msg_AMMO_C2S::has_id_shooter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_AMMO_C2S::set_has_id_shooter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_AMMO_C2S::clear_has_id_shooter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_AMMO_C2S::clear_id_shooter() {
  id_shooter_ = 0;
  clear_has_id_shooter();
}
inline ::google::protobuf::int32 Msg_AMMO_C2S::id_shooter() const {
  return id_shooter_;
}
inline void Msg_AMMO_C2S::set_id_shooter(::google::protobuf::int32 value) {
  set_has_id_shooter();
  id_shooter_ = value;
}

// -------------------------------------------------------------------

// Msg_AMMO_S2C

// required float x = 1;
inline bool Msg_AMMO_S2C::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_AMMO_S2C::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_AMMO_S2C::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_AMMO_S2C::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Msg_AMMO_S2C::x() const {
  return x_;
}
inline void Msg_AMMO_S2C::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool Msg_AMMO_S2C::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_AMMO_S2C::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_AMMO_S2C::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_AMMO_S2C::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Msg_AMMO_S2C::y() const {
  return y_;
}
inline void Msg_AMMO_S2C::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 direction = 3;
inline bool Msg_AMMO_S2C::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_AMMO_S2C::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_AMMO_S2C::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_AMMO_S2C::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Msg_AMMO_S2C::direction() const {
  return direction_;
}
inline void Msg_AMMO_S2C::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
}

// required int32 type = 4;
inline bool Msg_AMMO_S2C::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_AMMO_S2C::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_AMMO_S2C::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_AMMO_S2C::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_AMMO_S2C::type() const {
  return type_;
}
inline void Msg_AMMO_S2C::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 id = 5;
inline bool Msg_AMMO_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_AMMO_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_AMMO_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_AMMO_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_AMMO_S2C::id() const {
  return id_;
}
inline void Msg_AMMO_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_DAMAGE_C2S

// required int32 damage = 1;
inline bool Msg_DAMAGE_C2S::has_damage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_DAMAGE_C2S::set_has_damage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_DAMAGE_C2S::clear_has_damage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_DAMAGE_C2S::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 Msg_DAMAGE_C2S::damage() const {
  return damage_;
}
inline void Msg_DAMAGE_C2S::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
}

// required int32 id_hurt = 2;
inline bool Msg_DAMAGE_C2S::has_id_hurt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_DAMAGE_C2S::set_has_id_hurt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_DAMAGE_C2S::clear_has_id_hurt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_DAMAGE_C2S::clear_id_hurt() {
  id_hurt_ = 0;
  clear_has_id_hurt();
}
inline ::google::protobuf::int32 Msg_DAMAGE_C2S::id_hurt() const {
  return id_hurt_;
}
inline void Msg_DAMAGE_C2S::set_id_hurt(::google::protobuf::int32 value) {
  set_has_id_hurt();
  id_hurt_ = value;
}

// -------------------------------------------------------------------

// Msg_DAMAGE_S2C

// required int32 damage = 1;
inline bool Msg_DAMAGE_S2C::has_damage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_DAMAGE_S2C::set_has_damage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_DAMAGE_S2C::clear_has_damage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_DAMAGE_S2C::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 Msg_DAMAGE_S2C::damage() const {
  return damage_;
}
inline void Msg_DAMAGE_S2C::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
}

// required int32 id = 2;
inline bool Msg_DAMAGE_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_DAMAGE_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_DAMAGE_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_DAMAGE_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_DAMAGE_S2C::id() const {
  return id_;
}
inline void Msg_DAMAGE_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_GETITEM_S2C

// required int32 kind = 1;
inline bool Msg_GETITEM_S2C::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_GETITEM_S2C::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_GETITEM_S2C::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_GETITEM_S2C::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
inline ::google::protobuf::int32 Msg_GETITEM_S2C::kind() const {
  return kind_;
}
inline void Msg_GETITEM_S2C::set_kind(::google::protobuf::int32 value) {
  set_has_kind();
  kind_ = value;
}

// required int32 result = 2;
inline bool Msg_GETITEM_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_GETITEM_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_GETITEM_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_GETITEM_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_GETITEM_S2C::result() const {
  return result_;
}
inline void Msg_GETITEM_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_DEATH_S2C

// required int32 id = 1;
inline bool Msg_DEATH_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_DEATH_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_DEATH_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_DEATH_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_DEATH_S2C::id() const {
  return id_;
}
inline void Msg_DEATH_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_POINTTAKING_S2C

// required int32 team = 1;
inline bool Msg_POINTTAKING_S2C::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_POINTTAKING_S2C::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_POINTTAKING_S2C::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_POINTTAKING_S2C::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 Msg_POINTTAKING_S2C::team() const {
  return team_;
}
inline void Msg_POINTTAKING_S2C::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// required int32 percent = 2;
inline bool Msg_POINTTAKING_S2C::has_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_POINTTAKING_S2C::set_has_percent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_POINTTAKING_S2C::clear_has_percent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_POINTTAKING_S2C::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline ::google::protobuf::int32 Msg_POINTTAKING_S2C::percent() const {
  return percent_;
}
inline void Msg_POINTTAKING_S2C::set_percent(::google::protobuf::int32 value) {
  set_has_percent();
  percent_ = value;
}

// -------------------------------------------------------------------

// Msg_POINTTAKEN_S2C

// required int32 team = 1;
inline bool Msg_POINTTAKEN_S2C::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_POINTTAKEN_S2C::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_POINTTAKEN_S2C::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_POINTTAKEN_S2C::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 Msg_POINTTAKEN_S2C::team() const {
  return team_;
}
inline void Msg_POINTTAKEN_S2C::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// required int32 pointnumber = 2;
inline bool Msg_POINTTAKEN_S2C::has_pointnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_POINTTAKEN_S2C::set_has_pointnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_POINTTAKEN_S2C::clear_has_pointnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_POINTTAKEN_S2C::clear_pointnumber() {
  pointnumber_ = 0;
  clear_has_pointnumber();
}
inline ::google::protobuf::int32 Msg_POINTTAKEN_S2C::pointnumber() const {
  return pointnumber_;
}
inline void Msg_POINTTAKEN_S2C::set_pointnumber(::google::protobuf::int32 value) {
  set_has_pointnumber();
  pointnumber_ = value;
}

// -------------------------------------------------------------------

// Msg_ADDSCORES_S2C

// required int32 socres = 1;
inline bool Msg_ADDSCORES_S2C::has_socres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ADDSCORES_S2C::set_has_socres() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ADDSCORES_S2C::clear_has_socres() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ADDSCORES_S2C::clear_socres() {
  socres_ = 0;
  clear_has_socres();
}
inline ::google::protobuf::int32 Msg_ADDSCORES_S2C::socres() const {
  return socres_;
}
inline void Msg_ADDSCORES_S2C::set_socres(::google::protobuf::int32 value) {
  set_has_socres();
  socres_ = value;
}

// required int32 id = 2;
inline bool Msg_ADDSCORES_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ADDSCORES_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ADDSCORES_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ADDSCORES_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_ADDSCORES_S2C::id() const {
  return id_;
}
inline void Msg_ADDSCORES_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_ENDGAME_S2C

// required int32 result = 1;
inline bool Msg_ENDGAME_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ENDGAME_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ENDGAME_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ENDGAME_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_ENDGAME_S2C::result() const {
  return result_;
}
inline void Msg_ENDGAME_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 team = 2;
inline bool Msg_ENDGAME_S2C::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ENDGAME_S2C::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ENDGAME_S2C::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ENDGAME_S2C::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 Msg_ENDGAME_S2C::team() const {
  return team_;
}
inline void Msg_ENDGAME_S2C::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// Msg_POINTDESPUTE_S2C

// required int32 result = 1;
inline bool Msg_POINTDESPUTE_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_POINTDESPUTE_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_POINTDESPUTE_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_POINTDESPUTE_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_POINTDESPUTE_S2C::result() const {
  return result_;
}
inline void Msg_POINTDESPUTE_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_ROOMINFO_S2C

// required int32 masterid = 1;
inline bool Msg_ROOMINFO_S2C::has_masterid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ROOMINFO_S2C::set_has_masterid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ROOMINFO_S2C::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ROOMINFO_S2C::clear_masterid() {
  masterid_ = 0;
  clear_has_masterid();
}
inline ::google::protobuf::int32 Msg_ROOMINFO_S2C::masterid() const {
  return masterid_;
}
inline void Msg_ROOMINFO_S2C::set_masterid(::google::protobuf::int32 value) {
  set_has_masterid();
  masterid_ = value;
}

// required bytes masterusername = 2;
inline bool Msg_ROOMINFO_S2C::has_masterusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ROOMINFO_S2C::set_has_masterusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ROOMINFO_S2C::clear_has_masterusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ROOMINFO_S2C::clear_masterusername() {
  if (masterusername_ != &::google::protobuf::internal::kEmptyString) {
    masterusername_->clear();
  }
  clear_has_masterusername();
}
inline const ::std::string& Msg_ROOMINFO_S2C::masterusername() const {
  return *masterusername_;
}
inline void Msg_ROOMINFO_S2C::set_masterusername(const ::std::string& value) {
  set_has_masterusername();
  if (masterusername_ == &::google::protobuf::internal::kEmptyString) {
    masterusername_ = new ::std::string;
  }
  masterusername_->assign(value);
}
inline void Msg_ROOMINFO_S2C::set_masterusername(const char* value) {
  set_has_masterusername();
  if (masterusername_ == &::google::protobuf::internal::kEmptyString) {
    masterusername_ = new ::std::string;
  }
  masterusername_->assign(value);
}
inline void Msg_ROOMINFO_S2C::set_masterusername(const void* value, size_t size) {
  set_has_masterusername();
  if (masterusername_ == &::google::protobuf::internal::kEmptyString) {
    masterusername_ = new ::std::string;
  }
  masterusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_ROOMINFO_S2C::mutable_masterusername() {
  set_has_masterusername();
  if (masterusername_ == &::google::protobuf::internal::kEmptyString) {
    masterusername_ = new ::std::string;
  }
  return masterusername_;
}
inline ::std::string* Msg_ROOMINFO_S2C::release_masterusername() {
  clear_has_masterusername();
  if (masterusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = masterusername_;
    masterusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_ROOMINFO_S2C::set_allocated_masterusername(::std::string* masterusername) {
  if (masterusername_ != &::google::protobuf::internal::kEmptyString) {
    delete masterusername_;
  }
  if (masterusername) {
    set_has_masterusername();
    masterusername_ = masterusername;
  } else {
    clear_has_masterusername();
    masterusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 roomid = 3;
inline bool Msg_ROOMINFO_S2C::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_ROOMINFO_S2C::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_ROOMINFO_S2C::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_ROOMINFO_S2C::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 Msg_ROOMINFO_S2C::roomid() const {
  return roomid_;
}
inline void Msg_ROOMINFO_S2C::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// Msg_ROOMLIST_S2C

// repeated .Msg_ROOMINFO_S2C room = 1;
inline int Msg_ROOMLIST_S2C::room_size() const {
  return room_.size();
}
inline void Msg_ROOMLIST_S2C::clear_room() {
  room_.Clear();
}
inline const ::Msg_ROOMINFO_S2C& Msg_ROOMLIST_S2C::room(int index) const {
  return room_.Get(index);
}
inline ::Msg_ROOMINFO_S2C* Msg_ROOMLIST_S2C::mutable_room(int index) {
  return room_.Mutable(index);
}
inline ::Msg_ROOMINFO_S2C* Msg_ROOMLIST_S2C::add_room() {
  return room_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Msg_ROOMINFO_S2C >&
Msg_ROOMLIST_S2C::room() const {
  return room_;
}
inline ::google::protobuf::RepeatedPtrField< ::Msg_ROOMINFO_S2C >*
Msg_ROOMLIST_S2C::mutable_room() {
  return &room_;
}

// required int32 result = 2;
inline bool Msg_ROOMLIST_S2C::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_ROOMLIST_S2C::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_ROOMLIST_S2C::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_ROOMLIST_S2C::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Msg_ROOMLIST_S2C::result() const {
  return result_;
}
inline void Msg_ROOMLIST_S2C::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Msg_ROOMINFOREQUEST_C2S

// optional int32 id = 1;
inline bool Msg_ROOMINFOREQUEST_C2S::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_ROOMINFOREQUEST_C2S::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_ROOMINFOREQUEST_C2S::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_ROOMINFOREQUEST_C2S::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_ROOMINFOREQUEST_C2S::id() const {
  return id_;
}
inline void Msg_ROOMINFOREQUEST_C2S::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Msg_USERINFO_S2C

// required int32 id = 1;
inline bool Msg_USERINFO_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_USERINFO_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_USERINFO_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_USERINFO_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_USERINFO_S2C::id() const {
  return id_;
}
inline void Msg_USERINFO_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required bytes username = 2;
inline bool Msg_USERINFO_S2C::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_USERINFO_S2C::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_USERINFO_S2C::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_USERINFO_S2C::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& Msg_USERINFO_S2C::username() const {
  return *username_;
}
inline void Msg_USERINFO_S2C::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Msg_USERINFO_S2C::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void Msg_USERINFO_S2C::set_username(const void* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Msg_USERINFO_S2C::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* Msg_USERINFO_S2C::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Msg_USERINFO_S2C::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 hp = 3;
inline bool Msg_USERINFO_S2C::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_USERINFO_S2C::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_USERINFO_S2C::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_USERINFO_S2C::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 Msg_USERINFO_S2C::hp() const {
  return hp_;
}
inline void Msg_USERINFO_S2C::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// required int32 type = 4;
inline bool Msg_USERINFO_S2C::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_USERINFO_S2C::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_USERINFO_S2C::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_USERINFO_S2C::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg_USERINFO_S2C::type() const {
  return type_;
}
inline void Msg_USERINFO_S2C::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 team = 5;
inline bool Msg_USERINFO_S2C::has_team() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_USERINFO_S2C::set_has_team() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_USERINFO_S2C::clear_has_team() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_USERINFO_S2C::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 Msg_USERINFO_S2C::team() const {
  return team_;
}
inline void Msg_USERINFO_S2C::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// -------------------------------------------------------------------

// MSG_USERINFOLISTOS_S2C

// repeated .Msg_USERINFO_S2C userinfo = 1;
inline int MSG_USERINFOLISTOS_S2C::userinfo_size() const {
  return userinfo_.size();
}
inline void MSG_USERINFOLISTOS_S2C::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::Msg_USERINFO_S2C& MSG_USERINFOLISTOS_S2C::userinfo(int index) const {
  return userinfo_.Get(index);
}
inline ::Msg_USERINFO_S2C* MSG_USERINFOLISTOS_S2C::mutable_userinfo(int index) {
  return userinfo_.Mutable(index);
}
inline ::Msg_USERINFO_S2C* MSG_USERINFOLISTOS_S2C::add_userinfo() {
  return userinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Msg_USERINFO_S2C >&
MSG_USERINFOLISTOS_S2C::userinfo() const {
  return userinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Msg_USERINFO_S2C >*
MSG_USERINFOLISTOS_S2C::mutable_userinfo() {
  return &userinfo_;
}

// -------------------------------------------------------------------

// MSG_VECOS_S2C

// required float x = 1;
inline bool MSG_VECOS_S2C::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_VECOS_S2C::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_VECOS_S2C::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_VECOS_S2C::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float MSG_VECOS_S2C::x() const {
  return x_;
}
inline void MSG_VECOS_S2C::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool MSG_VECOS_S2C::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_VECOS_S2C::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_VECOS_S2C::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_VECOS_S2C::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float MSG_VECOS_S2C::y() const {
  return y_;
}
inline void MSG_VECOS_S2C::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 direction = 3;
inline bool MSG_VECOS_S2C::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MSG_VECOS_S2C::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MSG_VECOS_S2C::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MSG_VECOS_S2C::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 MSG_VECOS_S2C::direction() const {
  return direction_;
}
inline void MSG_VECOS_S2C::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
}

// required int32 ingrass = 4;
inline bool MSG_VECOS_S2C::has_ingrass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MSG_VECOS_S2C::set_has_ingrass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MSG_VECOS_S2C::clear_has_ingrass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MSG_VECOS_S2C::clear_ingrass() {
  ingrass_ = 0;
  clear_has_ingrass();
}
inline ::google::protobuf::int32 MSG_VECOS_S2C::ingrass() const {
  return ingrass_;
}
inline void MSG_VECOS_S2C::set_ingrass(::google::protobuf::int32 value) {
  set_has_ingrass();
  ingrass_ = value;
}

// required int32 id = 5;
inline bool MSG_VECOS_S2C::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MSG_VECOS_S2C::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MSG_VECOS_S2C::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MSG_VECOS_S2C::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MSG_VECOS_S2C::id() const {
  return id_;
}
inline void MSG_VECOS_S2C::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// MSG_VECOSLIST_S2C

// repeated .MSG_VECOS_S2C vec = 1;
inline int MSG_VECOSLIST_S2C::vec_size() const {
  return vec_.size();
}
inline void MSG_VECOSLIST_S2C::clear_vec() {
  vec_.Clear();
}
inline const ::MSG_VECOS_S2C& MSG_VECOSLIST_S2C::vec(int index) const {
  return vec_.Get(index);
}
inline ::MSG_VECOS_S2C* MSG_VECOSLIST_S2C::mutable_vec(int index) {
  return vec_.Mutable(index);
}
inline ::MSG_VECOS_S2C* MSG_VECOSLIST_S2C::add_vec() {
  return vec_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MSG_VECOS_S2C >&
MSG_VECOSLIST_S2C::vec() const {
  return vec_;
}
inline ::google::protobuf::RepeatedPtrField< ::MSG_VECOS_S2C >*
MSG_VECOSLIST_S2C::mutable_vec() {
  return &vec_;
}

// -------------------------------------------------------------------

// MSG_INFOAC_C2S

// required int32 result = 1;
inline bool MSG_INFOAC_C2S::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_INFOAC_C2S::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_INFOAC_C2S::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_INFOAC_C2S::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MSG_INFOAC_C2S::result() const {
  return result_;
}
inline void MSG_INFOAC_C2S::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgType>() {
  return ::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_2eproto__INCLUDED
