目前客户端框架主体分为三部分
Skyunion：基础框架，提供最基础的服务，项目无关性。
Client: 游戏相关的组件或者业务无关组件代码。
Hotfix: 游戏业务逻辑代码。（可作本地代码和热更新代码使用）
其它模块:
ILRTBind:处理ILRuntime的各种类型绑定使用
Native:初始化为本地代码运行Hotfix使用
Game:初始化框架使用

核心模块Skyunion介绍
PluginManager: 插件管理器，负责所有插件的管理。

AssetService: 提供资源的加载服务， 所有Object的实例化与销毁和文件的加载都需要通过此服务，方便后续优化性能和加密文件。  目前内部支持两套方案 XAsset和aas资源包
AudioService: 提供声音的高级服务， 支持 声音分组，声音随机播放，分组声音最大播放数量和循环， 3D音效等等。程序只需要根据名字调用，至于声音如何分组如何随机播放的通过配置文件
DataService: 如果表格数据的读取， 目前还没确认要使用什么方式，还没填错代码。（到时候先临时采用ald原来的，后续会在提供另外一套数据服务用于正式版使用）
NetService：网络服务，支持网络的连接，可以自定义包体解析。 Hotfix项目需要根据实际项目，编写对应的解析函数。或者在 Client去编写解析函数
HotFixService:  提供代码热更新服务，目前仅支持ILRuntime。 设计到可能是热更代码的实例化需要使用此服务提供的实例化接口。
InputManager: 提供输入方面的支持，目前先提供 触摸相关的操作。 移动，缩放，和3D物件触摸事件等。
LogService: 日记服务，使用log4net来进行日记的保存， 可以随时切换日记的方式（数据库，udp，文件流等等）   unity的的日记自动捕获保存。
UIManager:界面管理器，目前直接使用ald的那套，进行了一些删减。

关于aas资源请看Doc下面的aas介绍。  目前资源都直接使用简单名字，别名访问， 资源随便改位置都可以，只要别名不变就可以了。
aas play mode请使用virtual Model 目前aas有bug   fastmode加载场景有问题。
平时开发 HotfixMode 请使用 NativeCode， 直接和平时Unity开发调试一样。

Client下面有个ROK目前，是我整理后的ROK部分源代码后续有些功能可以参考实现。

关于 Hotfix 下面的 pureMVC 这边说明一下： Proxy 部分， 请根据服务器模块对应好Proxy，对接服务器的Proxy只能进行出数据的维护，不可以调用Unity的GameObject之类或者UI相关的东西。 方便在资源还没有的情况下，可以和服务器直接联调， 方便后续做一下自动化数据测试的一些东西。

关于模块 Skyunion下的代码添加和修改要慎重考虑。
